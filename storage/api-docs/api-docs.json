{
    "openapi": "3.0.0",
    "info": {
        "title": "Blog Test API",
        "description": "This is the api documentation of the blog project",
        "contact": {
            "name": "For the 3 Sided Cube API Team"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate a user and return an access token",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Invalidate the user's token and log them out",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "Logout Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/posts/status/{status}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get posts by status",
                "description": "Fetch posts by their status",
                "operationId": "getPostsByStatus",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Posts retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{...}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Posts not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No posts found with the given status"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/posts/{id}/publish": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Publish a post",
                "description": "Publish a post by its ID",
                "operationId": "publishPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post published successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post published successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/posts/{id}/schedule": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Schedule a post",
                "description": "Schedule a post by its ID",
                "operationId": "schedulePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "schedule_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-01T12:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post scheduled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post scheduled successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/posts/{id}/unpublish": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Unpublish a post",
                "description": "Unpublish a post by its ID",
                "operationId": "unpublishPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post unpublished successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post unpublished successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/author/{userId}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get posts by author",
                "description": "Fetch posts by the author's user ID",
                "operationId": "getPostsByAuthor",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Posts retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{...}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Posts not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No posts found for the given author"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/":{
            "get":{
                "operationId": "Fetch all posts",
                "description": "Fetch all post. non admins will get only published posts",
                "summary":"Fetch all posts",
                "tags":["Posts"],
                "parameters":[

                ]
            }
        },
        "/api/v1/admin/posts/{id}": {
            "delete": {
              "summary": "Delete a post",
              "description": "This endpoint allows you to delete a post by its ID.",
              "tags": ["Admin"],
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The ID of the post to delete",
                  "schema": {
                    "type": "integer",
                    "example": 1
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Post deleted successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Post deleted successfully"
                          }
                        }
                      }
                    }
                  }
                },
                "404": {
                  "description": "Post not found",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Post not found"
                          }
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "An error occurred while deleting the post",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "An error occurred while deleting the post"
                          },
                          "error": {
                            "type": "string",
                            "example": "Detailed error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
            }
        },
        "/api/v1/posts/search": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Search posts",
                "description": "Search posts by query parameters",
                "operationId": "searchPosts",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Posts found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{...}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No posts found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{id}/comments": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get comments for a post",
                "description": "Fetch comments for a post by its ID",
                "operationId": "getPostComments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Comments retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": "{...}"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{id}/tags": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get tags for a post",
                "description": "Fetch tags for a post by its ID",
                "operationId": "getPostTags",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tags retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": "{...}"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/users": {
            "post": {
              "tags": [
                 "Admin"
              ],
              "summary": "Create a new user",
              "description": "This create a new user and returns an Auth Token ",
              "operationId": "storeUser",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "required": [
                        "email",
                        "password"
                      ],
                      "properties": {
                        "name": {
                            "type": "string",
                            "example": "Desmond Pass"
                          },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "dezy@example.com"
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "example": "password123"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "responses": {
                "201": {
                    "description": "User created successfully",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "example": 17
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "DforDEz"
                                    },
                                    "email": {
                                      "type": "string",
                                      "example": "d778ess@gmwjail.com"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2024-07-20 19:59:57"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2024-07-20 19:59:57"
                                    },
                                    "role": {
                                      "type": "string",
                                      "example": "author"
                                    }
                                  }
                                },
                                "access_token": {
                                  "type": "string",
                                  "example": "20|QgsJiHkL8oQwvujEe26yqYwKE7cFuTTO7UTcPVMp0a4d385a"
                                },
                                "token_type": {
                                  "type": "string",
                                  "example": "Bearer"
                                }
                              }
                            },
                            "message": {
                              "type": "string",
                              "example": "User registered successfully"
                            },
                            "status": {
                              "type": "integer",
                              "example": 201
                            }
                          }
                        }
                      }
                    }
                  },
                "422": {
                  "description": "Validation error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 422
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          }
                        }
                      }
                    }
                  }
                },
                "503": {
                  "description": "Service Unavailable",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 503
                          },
                          "message": {
                            "type": "string",
                            "example": "An error occured creating user"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "/api/v1/admin/users/{id}": {
            "get": {
                "tags": [
                    "UnderConstruction"
                ],
                "summary": "Get user by ID",
                "description": "Fetch user details by their ID",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{...}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update user",
                "description": "Update user details by their ID | Only admins can update email and Roles of other users ",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Desmond Ezo-Ojile"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "author"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users","Admin"
                ],
                "summary": "Delete user",
                "description": "Delete user by their ID : A user can delete its own account, and an Admin as well ",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/v1/admin/authors": {
            "post": {
              "summary": "Create a new author",
              "description": "This endpoint allows you to create a new author user.",
              "tags": ["Authors"],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "password": {
                          "type": "string",
                          "example": "password123"
                        }
                      },
                      "required": ["name", "email", "password"]
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "User registered successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User registered successfully"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "John Doe"
                                  },
                                  "email": {
                                    "type": "string",
                                    "example": "john.doe@example.com"
                                  },
                                  "role": {
                                    "type": "string",
                                    "example": "author"
                                  },
                                  "is_active": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2023-07-21T17:32:28Z"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2023-07-21T17:32:28Z"
                                  }
                                }
                              },
                              "access_token": {
                                "type": "string",
                                "example": "some-jwt-token"
                              },
                              "token_type": {
                                "type": "string",
                                "example": "Bearer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "An error occurred while creating the author",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "An error occurred while creating the author"
                          },
                          "error": {
                            "type": "string",
                            "example": "Detailed error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Posts",
            "description": "Posts"
        },
        {
            "name": "Admin",
            "description": "Routes for the Admin dashboard"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Authors",
            "description": "Athours"
        },
        {
            "name": "Deprecated",
            "description": "All deprecated routes and will be removed in next version."
        },
        {
            "name": "UnderConstruction",
            "description": "All UnderConstruction routes will be made available soon."
        }
    ]
}
